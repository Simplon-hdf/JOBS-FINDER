# This is a basic workflow to help you get started with Actions

name: Validate

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: salim1993
          POSTGRES_USER: salim
          POSTGRES_DB: finder_db
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can #access it(copy all the source code in the repo)
      - name: Get code from github repository and download it into the actuel runner
        uses: actions/checkout@v3

      - name: Install NodeJS #Nodejs is preinstalled in the runner, but we installed manually here to practice
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      #Frontend side
      - name: Install dependencies
        run: npm ci #npm install Or npm CI(to install the dependencies locked into package-lock.js, so it's better then npm install, that's make us sure that we are using the same version that we used during the development)
        working-directory: ./jobs-finder-frontend

      - name: Run tests
        run: npm test
        working-directory: ./jobs-finder-frontend

      ##Backend side...
      - name: Install backend dependencies
        run: npm ci
        working-directory: ./jobs-finder-backend

      - name: Run tests for the backend
        run: node server.js
        working-directory: ./jobs-finder-backend
